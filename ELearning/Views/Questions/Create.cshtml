@model ELearning.Models.Question

@{
    ViewData["Title"] = "Create";
}
<section class="resume-section p-3 p-lg-5 d-flex flex-column" id="Questions/MyQuestions">
    <div class="my-auto">
        <h2 class="mb-10">Create</h2>

        <hr />
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Status" hidden />
            <div class="form-group row">
                <label asp-for="Text" class="control-label"></label>
                <textarea asp-for="Text" class="form-control"></textarea>
                <span asp-validation-for="Text" class="text-danger"></span>
            </div>
            <div class="form-group row">

                @for (var i = 0; i < Model.Answers.Count; i++)
                {
                    <div class="col-md-6">
                        <label asp-for="Answers[i].Text" class="control-label"></label>
                        <input asp-for="Answers[i].Text" class="form-control" />
                        <span asp-validation-for="Answers[i].Text" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Answers[i].Comment" class="control-label"></label>
                        <input asp-for="Answers[i].Comment" class="form-control" />
                        <span asp-validation-for="Answers[i].Comment" class="text-danger"></span>
                    </div>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
    <h5>@ViewData["Message"]</h5>
</section>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
